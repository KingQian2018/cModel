import os
from posixpath import abspath
from urllib.error import ContentTooShortError

abs_path = os.path.dirname(os.path.abspath(__file__))
auto_file_c = abs_path+'/src/core/auto_generate_prase.c'

target_algo_path = abs_path+'/src/algo'
target_model_path = abs_path+'/cmodel_conf.h'
target_model = []

with open(target_model_path, 'r', encoding='utf-8') as f:
    ls = f.readlines()
    for l in ls:
        if 'T(' in l:
            temp = l.split('(')[1].split(')')[0]
            target_model.append(temp)

algo_files_h = []

for root, dirs, files in os.walk(target_algo_path):
    for f in files:
        if '.h' in f:
            algo_files_h.append(f)


with open(auto_file_c, 'w', encoding='utf-8') as f:
    f.write("/** This file was automantically generated by auto_generate.py. DO NOT CHANGE IT!**/\n")

    f.write("#include \"../component/cJson/cJSON_Utils.h\"\n")

    f.write("\n")
    for h in algo_files_h:
        f.write("#include \""+h+"\"\n")
    f.write("\n")

    for tm in target_model:
        tm = str.lower(tm)
        f.write("extern CMODEL_STATUS_e prase_"+tm +
                "_pars(unsigned int id, const cJSON* pars);\n")
    f.write("\n")

    f.write("typedef struct _Prase_Datas_s {\n")
    f.write("\t const char* name;\n")
    f.write("\t CModel (*createCB)(uint32_t, uint32_t);\n")
    f.write("\t CMODEL_STATUS_e (*parsCB)(uint32_t, const cJSON*);\n")
    f.write("}Prase_Datas_s;\n")
    f.write("\n")

    f.write("const Prase_Datas_s Prase_Datas[] = {\n")
    for tm in target_model:
        tag = tm
        tag_create = str.lower(tm)+"_create"
        tag_pars = "prase_"+str.lower(tm)+"_pars"
        f.write("\t{\""+tag+"\", "+tag_create+", "+tag_pars+"},\n")
    f.write("};\n")
    f.write("\n")
    f.write(
        "unsigned int Prase_Datas_len = sizeof(Prase_Datas)/sizeof(Prase_Datas[0]);\n")
    f.write("\n")
    pass
